# MDL file for Synth-A-Modeler
#
# Edgar Berdahl, 2013
# Audio Communication Group
# Technical University of Berlin
#
# -------------------------------------------------------------------
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.





faustcode:m1Mass=hslider("m1 mass [kg]", 0.01865,0.0002,0.075,0.0001);
faustcode:m2Mass=hslider("m2 mass [kg]", 0.01865,0.0002,0.075,0.0001);
faustcode:m3Mass=hslider("m3 mass [kg]", 0.01865,0.0002,0.075,0.0001);

faustcode:touchm1Stiffness=hslider("Touch stiffness [N/(m)]", 130.0,1.0,1000.0,1.0);
faustcode:touchm1Damping=hslider("Touch damping [N/(m/s)]", 0.1,0.0,1.5,0.01);
faustcode:trickDamping=hslider("Damping to ground [N/(m/s)]", 0.18,0.0,5.0,0.05);

touch(touchm1Stiffness,touchm1Damping,0.0),touchm1,dev1,m1;
touch(touchm1Stiffness,touchm1Damping,0.0),touchm2,dev1,m2;
touch(touchm1Stiffness,touchm1Damping,0.0),touchm3,dev1,m3;

link(0.0,trickDamping,0.0),l1,grnd,m1;
link(0.0,trickDamping,0.0),l2,grnd,m2;
link(0.0,trickDamping,0.0),l3,grnd,m3;

mass(m1Mass,0.0,0.0),m1;
mass(m2Mass,0.0,0.0),m2;
mass(m3Mass,0.0,0.0),m3;

# To emulate the force of gravity on the m1, we use a spring with small spring constant k_g
# to a far-away location x_g so that the "force" of gravity is roughly constant
# F=mg=(kg)(xg)
# So xg=10m is sufficiently far away
# kg = mg/xg = (0.1865 kg)(9.8 m/s^2)/10m = 0.18277 N/m
ground(-10.0),xg;
faustcode:kg1 = m1Mass*9.8/10.0/10.0;
link(kg1,0.0,0.0),gravitym1,m1,xg;
faustcode:kg2 = m2Mass*9.8/10.0/10.0;
link(kg2,0.0,0.0),gravitym2,m2,xg;
faustcode:kg3 = m3Mass*9.8/10.0/10.0;
link(kg3,0.0,0.0),gravitym3,m3,xg;

# It might be a good idea to differentiate the audio output or pass it through some sort of audio resonator ...
faustcode: outputDSP=highpass(5,20.0);
faustcode: vol=hslider("Ze volume",1000.0,50.0,10000.0,10.0);



port( ),dev1; # pos 200,200
port( ),dev2; # pos 300,300

ground(0.0),grnd; # pos 40,40

audioout,a0,((m1+m3):outputDSP)*vol; # pos 43,160
audioout,a1,(m2:outputDSP)*vol; # pos 187,160