ground(0.0),mn40xn40y,();
ground(0.0),mn40xn30y,();
ground(0.0),mn40xn20y,();
ground(0.0),mn40xn10y,();
ground(0.0),mn40xn0y,();
ground(0.0),mn40x10y,();
ground(0.0),mn40x20y,();
ground(0.0),mn40x30y,();
ground(0.0),mn40x40y,();
ground(0.0),mn30xn40y,();
ground(0.0),mn30xn30y,();
ground(0.0),mn30xn20y,();
ground(0.0),mn30xn10y,();
ground(0.0),mn30xn0y,();
ground(0.0),mn30x10y,();
ground(0.0),mn30x20y,();
ground(0.0),mn30x30y,();
ground(0.0),mn30x40y,();
ground(0.0),mn20xn40y,();
ground(0.0),mn20xn30y,();
ground(0.0),mn20xn20y,();
ground(0.0),mn20xn10y,();
mass(massMembrane,0.0,0.0),mn20xn0y,();
ground(0.0),mn20x10y,();
ground(0.0),mn20x20y,();
ground(0.0),mn20x30y,();
ground(0.0),mn20x40y,();
ground(0.0),mn10xn40y,();
ground(0.0),mn10xn30y,();
ground(0.0),mn10xn20y,();
mass(massMembrane,0.0,0.0),mn10xn10y,();
mass(massMembrane,0.0,0.0),mn10xn0y,();
mass(massMembrane,0.0,0.0),mn10x10y,();
ground(0.0),mn10x20y,();
ground(0.0),mn10x30y,();
ground(0.0),mn10x40y,();
ground(0.0),mn0xn40y,();
ground(0.0),mn0xn30y,();
mass(massMembrane,0.0,0.0),mn0xn20y,();
mass(massMembrane,0.0,0.0),mn0xn10y,();
mass(massMembrane,0.0,0.0),mn0xn0y,();
mass(massMembrane,0.0,0.0),mn0x10y,();
mass(massMembrane,0.0,0.0),mn0x20y,();
ground(0.0),mn0x30y,();
ground(0.0),mn0x40y,();
ground(0.0),m10xn40y,();
ground(0.0),m10xn30y,();
ground(0.0),m10xn20y,();
mass(massMembrane,0.0,0.0),m10xn10y,();
mass(massMembrane,0.0,0.0),m10xn0y,();
mass(massMembrane,0.0,0.0),m10x10y,();
ground(0.0),m10x20y,();
ground(0.0),m10x30y,();
ground(0.0),m10x40y,();
ground(0.0),m20xn40y,();
ground(0.0),m20xn30y,();
ground(0.0),m20xn20y,();
ground(0.0),m20xn10y,();
mass(massMembrane,0.0,0.0),m20xn0y,();
ground(0.0),m20x10y,();
ground(0.0),m20x20y,();
ground(0.0),m20x30y,();
ground(0.0),m20x40y,();
ground(0.0),m30xn40y,();
ground(0.0),m30xn30y,();
ground(0.0),m30xn20y,();
ground(0.0),m30xn10y,();
ground(0.0),m30xn0y,();
ground(0.0),m30x10y,();
ground(0.0),m30x20y,();
ground(0.0),m30x30y,();
ground(0.0),m30x40y,();
ground(0.0),m40xn40y,();
ground(0.0),m40xn30y,();
ground(0.0),m40xn20y,();
ground(0.0),m40xn10y,();
ground(0.0),m40xn0y,();
ground(0.0),m40x10y,();
ground(0.0),m40x20y,();
ground(0.0),m40x30y,();
ground(0.0),m40x40y,();
# This is a more elaborate drum model.

# Example MDL file for Synth-A-Modeler
#
# Edgar Berdahl, 2012
# Audio Communication Group
# Technical University of Berlin
#
# -------------------------------------------------------------------
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



#faustcode:touchStiffnL=hslider("touchStiffnL", 18000.0, 2000.0, 20000.0, 1000.0);
#faustcode:touchStiffnR=hslider("touchStiffnR", 13000.0, 2000.0, 20000.0, 1000.0);
#faustcode:massL=hslider("massL", 0.000007, 0.000003, 0.00001, 0.000001);
#faustcode:massR=hslider("massR", 0.000004, 0.000003, 0.00001, 0.000001);
#faustcode:massMembrane=hslider("massMembrane", 0.08, 0.0001, 0.1, 0.0001);
#faustcode:decayTimeMembrane =hslider("decayTimeMembrane", 0.08, 0.01, 1.0, 0.01);
#faustcode:freqMembrane=hslider("freqMembrane",170.0, 30.0, 2000.0, 10.0);
#faustcode:touchDamp=hslider("touchDamp",0.01,0.00,0.5,0.01);
#faustcode:gravParam=hslider("gravParam",30.0,1.0,100.0,1.0);

faustcode:massMembrane=hslider("Mass for membrane point", 0.0004, 0.0001, 0.008, 0.00005);
faustcode:membraneStiffness=hslider("Membrane link stiffness", 200.0,10.0,1000.0,10.0);
faustcode:membraneDamping=hslider("Membrane link damping", 0.001,0.0001,0.1,0.0001);
faustcode:edgeStiffness=hslider("Edge link stiffness", 200.0,10.0,1000.0,10.0);
faustcode:edgeDamping=hslider("Edge link damping", 0.001,0.0001,0.1,0.0001);
faustcode:interactionStiffness=hslider("Interaction stiffness", 100.0, 10.0, 400.0, 5.0);
faustcode:interactionDamping=hslider("Interaction damping", 0.01, 0.00, 0.3, 0.001);

ground(0.0),g,();
port( ),dev1,(devlabel);
port( ),dev2,(devlabel);




link(50.0,0.001,0.0),ldev2,dev2,g,(llabel);
touch(interactionStiffness,interactionDamping,0.0),tt,dev1,mn0xn0y,(label);

# Actually for this particular model, the highpass filter isn't necessary to eliminate DC offsets, but it sounds better with high-pass filtering!
audioout,aL,mn20xn0y*(2400000.0):highpass(1,2000.0):highpass(1,1000.0);
audioout,aR,mn0xn0y*(600000.0):highpass(1,2000.0):highpass(1,1000.0);

link(edgeStiffness,edgeDamping,0.0),l1,mn30xn0y,mn20xn0y,();
link(edgeStiffness,edgeDamping,0.0),l2,mn20xn10y,mn20xn0y,();
link(edgeStiffness,edgeDamping,0.0),l3,mn20xn10y,mn10xn10y,();
link(edgeStiffness,edgeDamping,0.0),l4,mn20xn0y,mn20x10y,();
link(membraneStiffness,membraneDamping,0.0),l5,mn20xn0y,mn10xn0y,();
link(edgeStiffness,edgeDamping,0.0),l6,mn20x10y,mn10x10y,();
link(edgeStiffness,edgeDamping,0.0),l7,mn10xn20y,mn10xn10y,();
link(edgeStiffness,edgeDamping,0.0),l8,mn10xn20y,mn0xn20y,();
link(membraneStiffness,membraneDamping,0.0),l9,mn10xn10y,mn10xn0y,();
link(membraneStiffness,membraneDamping,0.0),l10,mn10xn10y,mn0xn10y,();
link(membraneStiffness,membraneDamping,0.0),l11,mn10xn0y,mn10x10y,();
link(membraneStiffness,membraneDamping,0.0),l12,mn10xn0y,mn0xn0y,();
link(edgeStiffness,edgeDamping,0.0),l13,mn10x10y,mn10x20y,();
link(membraneStiffness,membraneDamping,0.0),l14,mn10x10y,mn0x10y,();
link(edgeStiffness,edgeDamping,0.0),l15,mn10x20y,mn0x20y,();
link(edgeStiffness,edgeDamping,0.0),l16,mn0xn30y,mn0xn20y,();
link(membraneStiffness,membraneDamping,0.0),l17,mn0xn20y,mn0xn10y,();
link(edgeStiffness,edgeDamping,0.0),l18,mn0xn20y,m10xn20y,();
link(membraneStiffness,membraneDamping,0.0),l19,mn0xn10y,mn0xn0y,();
link(membraneStiffness,membraneDamping,0.0),l20,mn0xn10y,m10xn10y,();
link(membraneStiffness,membraneDamping,0.0),l21,mn0xn0y,mn0x10y,();
link(membraneStiffness,membraneDamping,0.0),l22,mn0xn0y,m10xn0y,();
link(membraneStiffness,membraneDamping,0.0),l23,mn0x10y,mn0x20y,();
link(membraneStiffness,membraneDamping,0.0),l24,mn0x10y,m10x10y,();
link(edgeStiffness,edgeDamping,0.0),l25,mn0x20y,mn0x30y,();
link(edgeStiffness,edgeDamping,0.0),l26,mn0x20y,m10x20y,();
link(edgeStiffness,edgeDamping,0.0),l27,m10xn20y,m10xn10y,();
link(membraneStiffness,membraneDamping,0.0),l28,m10xn10y,m10xn0y,();
link(edgeStiffness,edgeDamping,0.0),l29,m10xn10y,m20xn10y,();
link(membraneStiffness,membraneDamping,0.0),l30,m10xn0y,m10x10y,();
link(membraneStiffness,membraneDamping,0.0),l31,m10xn0y,m20xn0y,();
link(edgeStiffness,edgeDamping,0.0),l32,m10x10y,m10x20y,();
link(edgeStiffness,edgeDamping,0.0),l33,m10x10y,m20x10y,();
link(edgeStiffness,edgeDamping,0.0),l34,m20xn10y,m20xn0y,();
link(edgeStiffness,edgeDamping,0.0),l35,m20xn0y,m20x10y,();
link(edgeStiffness,edgeDamping,0.0),l36,m20xn0y,m30xn0y,();
